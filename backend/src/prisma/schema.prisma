generator client {
      provider        = "prisma-client-js"
      previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
      provider = "postgresql"
      url      = env("DATABASE_URL")
}

model Post {
      id           String     @id @default(uuid())
      nick         String     @unique
      name         String
      description  String
      text         String
      images       String[]
      certificate  String?
      serialNumber Int        @unique @default(autoincrement())
      createdAt    DateTime   @default(now())
      authorId     String
      author       User       @relation(fields: [authorId], references: [id])
      Like         Like[]
      DisLike      DisLike[]
      blockedAt    DateTime?
      Comments     Comments[]
}

model User {
      id          String           @id @default(uuid())
      nick        String           @unique
      name        String           @default("")
      email       String           @unique
      password    String
      avatar      String?
      images       String[]
      createdAt   DateTime         @default(now())
      posts       Post[]
      Like        Like[]
      DisLike     DisLike[]
      permissions UserPermission[]
      Comments    Comments[]
}

enum UserPermission {
      BLOCK_POST
      ALL
}

model Like {
      id        String   @id @default(uuid())
      createdAt DateTime @default(now())
      post      Post     @relation(fields: [postId], references: [id])
      postId    String
      author    User     @relation(fields: [authorId], references: [id])
      authorId  String

      @@unique([postId, authorId])
}

model DisLike {
      id        String   @id @default(uuid())
      createdAt DateTime @default(now())
      post      Post     @relation(fields: [postId], references: [id])
      postId    String
      author    User     @relation(fields: [authorId], references: [id])
      authorId  String

      @@unique([postId, authorId])
}

model Comments {
      id        String   @id @default(uuid())
      content   String
      createdAt DateTime @default(now())
      updateAt  DateTime @updatedAt
      post      Post     @relation(fields: [postId], references: [id])
      postId    String
      author    User     @relation(fields: [authorId], references: [id])
      authorId  String

      @@index([postId])
}
